#Libraries
library(httr)
library(jsonlite)
library(plotly)

#FirstTable
repository1 = GET("https://api.datamexico.org/tesseract/cubes/imss/aggregate.jsonrecords?drilldowns%5B%5D=Date+Month.Date.Month&measures%5B%5D=Insured+People&measures%5B%5D=Non+Workers&measures%5B%5D=Insured+Employment&measures%5B%5D=Temporary+Urban+Employment&measures%5B%5D=Temporary+Employment+Field&measures%5B%5D=Permanent+Urban+Employment&measures%5B%5D=Permanent+Employment+Field&parents=false&sparse=false")
rawToChar(repository1$content)
Data1 = fromJSON(rawToChar(repository1$content))
names(Data1)
Data1 <- Data1$data
Data1 <- Data1[, -c(1)]
Data1 <- data.frame(Data1)

#SecondTable
repository2 = GET("https://api.datamexico.org/tesseract/cubes/dgis_emergency/aggregate.jsonrecords?drilldowns%5B%5D=Date.Date.Date&measures%5B%5D=Average+Attention+Time&parents=false&sparse=false")
rawToChar(repository2$content)
Data2 = fromJSON(rawToChar(repository2$content))
names(Data2)
Data2 <- Data2$data
Data2 <- Data2[, -c(1)]
Data2 <- data.frame(Data2)

#ThirdTable
repository3 = GET("https://api.datamexico.org/tesseract/cubes/wellness_credits/aggregate.jsonrecords?drilldowns%5B%5D=Geography+Municipality.Geography.State&measures%5B%5D=Credits&parents=false&sparse=false")
rawToChar(repository3$content)
Data3 = fromJSON(rawToChar(repository3$content))
names(Data3)
Data3 <- Data3$data
Data3 <- Data3[, -c(1)]
Data3 <- data.frame(Data3)

#---------------------------------------------------#

#FirstGraphic
graphic1 = plot_ly(Data1, x = ~Month, y = ~Insured.People,
                   name = 'Data',
                   type = 'scatter',
                   mode = 'lines+markers')
graphic1 %>% layout(title="Data")

#SecondGraphic
graphic2 = plot_ly(Data1, x = ~Month, y = ~Insured.Employment,
                   name = 'Data',
                   type = 'scatter',
                   mode = 'lines+markers')
graphic2 %>% layout(title="Data")

#ThirdGraphic
graphic3 = plot_ly(Data1, x = ~Month, y = ~Non.Workers,
                   name = 'Data',
                   type = 'scatter',
                   mode = 'lines+markers')
graphic3 %>% layout(title="Data")

#FourthGraphic
graphic4 = plot_ly(Data2, x = ~Date, y = ~Average.Attention.Time,
                   name = 'Data',
                   type = 'scatter',
                   mode = 'lines+markers')
graphic4 %>% layout(title="Data")

#FifthGraphic
graphic5 = plot_ly(Data3, x = ~State, y = ~Credits,
                   name = 'Data',
                   type = 'scatter',
                   mode = 'lines+markers')
graphic5 %>% layout(title="Data")
